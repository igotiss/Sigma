<?php

class Animal {
    private $food;
    private $location;

    public function __construct($food, $location)
    {
        $this->food = $food;
        $this->location = $location;
    }

    public function makeNoise() {
        return "The".__CLASS__. "make some noise";
    }
    public function eat() {
        return 'The'.__CLASS__.'eat '.$this->food;
    }
    public function sleep() {
        return 'The'.__CLASS__.'sleep';
    }
    public function GetFood() {
        return $this->food;
    }
}

class Dog extends Animal {
    private $color;
    public function __construct($food, $location, $color)
    {
        parent::__construct($food, $location);
        $this->color = $color;
    }

    public function makeNoise()
    {
        return 'Собака гавкає';
    }
    public function eat() {
        return 'Собака гризе кістку';
    }
}

class Cat extends Animal {
    private $age;
    public function __construct($food, $location, $age)
    {
        parent::__construct($food, $location);
        $this->age = $age;
    }

    public function makeNoise()
    {
        return 'Кіт мявкає';
    }

    public function eat() {
        return 'Кіт п*є молоко';
    }
}

class Horse extends Animal {
    private $work;
    public function __construct($food, $location, $work)
    {
        parent::__construct($food, $location);
        $this->work = $work;
    }

    public function makeNoise()
    {
        return 'Кінь іржить';
    }

    public function eat()
    {
        return __CLASS__." їсть ".$this->GetFood(); // TODO: Change the autogenerated stub
    }


}

$horse = new Horse( "сіно" , "123", 'пахать');
$dog = new Dog('bone', '123', 'brown');
$cat = new Cat('Whiskas', 'selo', '10');

class Veterinar {
    public function treatAnimal(Animal $animal) {
        echo $animal->eat();
        echo $animal->makeNoise();
    }
}

$animals = [
    $horse, $dog, $cat
];
$likar = new Veterinar();

foreach ($animals as $animal) {
    $likar->treatAnimal($animal);
    echo "\n";
}


//var_dump($horse->eat());


